---
const title = 'Noticias en vivo ‚Äî Mir√° los canales principales de noticias en un solo lugar';

// helper para concatenar params sin duplicar "?"
const withParams = (url: string, params: string) =>
  url.includes('?') ? `${url}&${params}` : `${url}?${params}`;

// grilla 3√ó3: 8 videos + centro (i=4) es la nube
const tiles = [
  { label: 'TN',       src: 'https://www.youtube.com/embed/cb12KmMMDJA?rel=0&modestbranding=1' },
  { label: 'Canal 26', src: 'https://www.youtube.com/embed/BTaSHvWJW5A?rel=0&modestbranding=1' },
  { label: 'LN+',      src: 'https://www.youtube.com/embed/5f__Ls4_VYQ?rel=0&modestbranding=1' },
  { label: 'C5N',      src: 'https://www.youtube.com/embed/jTDk5CswBVk?rel=0&modestbranding=1' },
  { label: 'Centro',   src: null }, // nube
  { label: 'Cr√≥nica',  src: 'https://www.youtube.com/embed/avly0uwZzOE?rel=0&modestbranding=1' },
  { label: 'Am√©rica',  src: 'https://www.youtube.com/embed/ArKbAx1K-2U?rel=0&modestbranding=1' },
  { label: 'Infobae',  src: 'https://www.youtube.com/embed/j-em8Y9hfoE?rel=0&modestbranding=1' },
  { label: 'Net TV',   src: 'https://rudo.video/live/nettv' }, // puede bloquear en iframe
];
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>

    <link href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>üì∞</text></svg>" rel="icon" />

    <style>
      :root{ --bg:#0f172a; --tile:#111827; --br:14px; --gap:10px; --violet:#7c3aed; }
      html,body { height: 100%; }
      body {
        margin: 0; overflow: hidden;
        min-height: 100vh; max-height: 100vh;
        background: #012f6f; display: flex; flex-direction: column;
        font-family: system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Cantarell,Noto Sans,sans-serif;
      }
      .grid{
        height: 100vh; padding: var(--gap); box-sizing: border-box;
        display: grid; grid-template-columns: repeat(3, 1fr);
        grid-auto-rows: minmax(140px, 1fr); gap: var(--gap);
      }
      .tile{position:relative; background:var(--tile); border-radius:var(--br); overflow:hidden; box-shadow:0 4px 14px rgba(0,0,0,.35)}
      iframe{position:absolute; inset:0; width:100%; height:100%; border:0; background:#000}

      .tile.center { position: relative; display:flex; align-items:center; justify-content:center;
        background:linear-gradient(135deg, rgba(124,58,237,.9), rgba(14,165,233,.9));
      }
      #cloud{ position:absolute; inset:0; width:100%; height:100%; display:block; }
      .word{ fill:#fff; user-select:none; paint-order:stroke; stroke:rgba(0,0,0,.3); stroke-width:.8px; }

      /* Ticker */
      .ticker-full{
        position: fixed; left: var(--gap); right: var(--gap); top: var(--gap);
        z-index: 1200; display:flex; align-items:center; gap:12px;
        padding: 10px 14px; margin:0; background: var(--violet); color:#fff; border-radius:12px;
        box-shadow: 0 4px 14px rgba(0,0,0,.35); cursor: grab; user-select:none; touch-action:none;
      }
      .ticker-full[data-dragging="true"] { cursor: grabbing; }
      .marquee{ position:relative; overflow:hidden; height:22px; flex:1; }
      .marquee__inner{
        position:absolute; white-space:nowrap;
        animation: slide var(--marquee-duration, 60s) linear infinite;
        will-change: transform;
      }
      .ticker-full:hover .marquee__inner{ animation-play-state: paused; }
      @keyframes slide{ from{transform:translateX(0)} to{transform:translateX(-50%)} }

      .move-icon{ display:flex; align-items:center; justify-content:center; width:28px; height:28px; margin-right:8px; border-radius:8px; background:rgba(255,255,255,.14); color:#fff; cursor:grab; }
      .ticker-full[data-dragging="true"] .move-icon{ cursor:grabbing; }
      .move-icon:hover{ background: rgba(255,255,255,.22); }

      /* Men√∫ / modos */
      .menu-btn{ position:fixed; top:var(--gap); right:var(--gap); z-index:1300; width:42px; height:42px; display:flex; align-items:center; justify-content:center; color:#fff; background:rgba(17,24,39,.85); border:1px solid rgba(255,255,255,.15); border-radius:10px; backdrop-filter:blur(6px); cursor:pointer; }
      .menu-btn:focus-visible{ outline: 2px solid #a78bfa; outline-offset: 2px; }
      .menu-panel{ position:fixed; top:calc(var(--gap) + 48px); right:var(--gap); z-index:1300; width:260px; background:#111827; color:#e5e7eb; border:1px solid rgba(255,255,255,.12); border-radius:12px; padding:12px; box-shadow:0 12px 28px rgba(0,0,0,.35); }
      .menu-panel[hidden]{ display:none; }
      .menu-section strong{ display:block; font-size:.9rem; opacity:.9; margin-bottom:6px; }
      .menu-section label{ display:flex; gap:8px; align-items:center; padding:6px 4px; cursor:pointer; border-radius:8px; }
      .menu-section label:hover{ background: rgba(255,255,255,.06); }

      .grid.mode-9 { grid-template-columns: repeat(3,1fr); grid-auto-rows: 1fr; }
      .grid.mode-9 .tile[data-idx]{ display:block; }

      .grid.mode-6 { grid-template-columns: repeat(3,1fr); grid-auto-rows: 1fr; }
      .grid.mode-6 .tile[data-idx]{ display:none; }
      .grid.mode-6 .tile[data-idx="0"], .grid.mode-6 .tile[data-idx="1"], .grid.mode-6 .tile[data-idx="2"], .grid.mode-6 .tile[data-idx="3"], .grid.mode-6 .tile[data-idx="5"], .grid.mode-6 .tile[data-idx="6"]{ display:block; }

      .grid.mode-4 { grid-template-columns: repeat(2,1fr); grid-auto-rows: 1fr; }
      .grid.mode-4 .tile[data-idx]{ display:none; }
      .grid.mode-4 .tile[data-idx="0"], .grid.mode-4 .tile[data-idx="1"], .grid.mode-4 .tile[data-idx="2"], .grid.mode-4 .tile[data-idx="3"]{ display:block; }

      .grid.mode-1 { grid-template-columns: 1fr; grid-auto-rows: 1fr; }
      .grid.mode-1 .tile[data-idx]{ display:none; }
      .grid.mode-1 .tile[data-idx="0"]{ display:block; }

      .slot-grid{ display:grid; grid-template-columns:1fr; gap:6px; margin-top:6px; }
      .slot-grid .slot-row{ display:flex; gap:8px; align-items:center; }
      .slot-grid .slot-row label{ width:64px; font-size:.9rem; opacity:.85; }
      .slot-grid select{ flex:1; padding:6px 8px; border-radius:8px; background:#0b1220; color:#e5e7eb; border:1px solid rgba(255,255,255,.15); }
      .btn-ghost{ margin-top:8px; width:100%; padding:6px 8px; border-radius:8px; background:transparent; color:#e5e7eb; border:1px solid rgba(255,255,255,.2); cursor:pointer; }
      .btn-ghost:hover{ background:rgba(255,255,255,.07); }

      @media (max-width:640px){ .grid{ grid-template-columns:1fr; } }

      .blyx {margin: 20px auto 0; width:100%; }
    </style>
  </head>

  <body>
    <!-- Ticker -->
    <div class="ticker-full" id="ticker" role="region" aria-label="En vivo ‚Äî titulares y clima">
      <div class="move-icon" title="Arrastr√° para mover" aria-hidden="true">
        <svg viewBox="0 0 24 24" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="7 8 12 3 17 8"></polyline>
          <line x1="12" y1="3" x2="12" y2="21"></line>
          <polyline points="17 16 12 21 7 16"></polyline>
        </svg>
      </div>
      <b>En vivo</b>
      <div class="marquee"><div id="headlineMarquee" class="marquee__inner">Cargando‚Ä¶</div></div>
    </div>

    <!-- Men√∫ -->
    <button id="menuBtn" class="menu-btn" aria-label="Abrir men√∫" aria-expanded="false">
      <svg viewBox="0 0 24 24" width="22" height="22" stroke="currentColor" fill="none" stroke-width="2" stroke-linecap="round">
        <line x1="3" y1="6"  x2="21" y2="6"></line>
        <line x1="3" y1="12" x2="21" y2="12"></line>
        <line x1="3" y1="18" x2="21" y2="18"></line>
      </svg>
    </button>

    <div id="menuPanel" class="menu-panel" hidden>
      <div class="menu-section">
        <strong>Vista</strong>
        <label><input type="radio" name="layout" value="9" checked> 9 se√±ales (3√ó3)</label>
        <label><input type="radio" name="layout" value="6"> 6 se√±ales (3√ó2)</label>
        <label><input type="radio" name="layout" value="4"> 4 se√±ales (2√ó2)</label>
        <label><input type="radio" name="layout" value="1"> 1 se√±al (1√ó1)</label>
      </div>
      <div class="menu-section">
        <strong>Canales por posici√≥n</strong>
        <div id="slotSelectors" class="slot-grid"></div>
        <button id="resetMap" class="btn-ghost">Restablecer</button>
      </div>
      <div class="blyx">Hecho por
<a href="https://www.blyxsolutions.com.ar/" target="_blank" rel="noopener noreferrer" style="text-decoration:none;"> <span style="color:#2DD4BF;">Blyx</span><span style="color:#FB7185;">Solutions</span> </a> </div>
    </div>

    <!-- Grilla -->
    <main class="grid">
      {
        tiles.map((t, i) => (
          i === 4
            ? <section class="tile center" data-idx={i}>
                <svg id="cloud" viewBox="0 0 800 480" preserveAspectRatio="xMidYMid meet"></svg>
              </section>
            : <section class="tile" data-idx={i}>
                {t.src && <iframe src={withParams(t.src,'autoplay=1&mute=1&playsinline=1')} allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen loading="lazy"></iframe>}
              </section>
        ))
      }
    </main>

    <!-- Script √∫nico -->
    <script type="module">
      /* ========= 0) Carga robusta de d3 y d3-cloud (ESM) ========= */
      let d3, cloud;
      try {
        // 1er intento: jsDelivr +esm
        d3    = await import('https://cdn.jsdelivr.net/npm/d3@7/+esm');
        cloud = (await import('https://cdn.jsdelivr.net/npm/d3-cloud@1/+esm')).default;
      } catch (e1) {
        console.warn('Fallo jsDelivr +esm, probando esm.sh', e1);
        // 2¬∫ intento: esm.sh (compila a ESM)
        d3    = await import('https://esm.sh/d3@7');
        cloud = (await import('https://esm.sh/d3-cloud@1')).default;
      }

      /* ===== Stopwords / helpers ===== */
      const STOP = new Set([
        'de','la','el','los','las','y','a','en','del','con','por','para','un','una','al','que','se','su','sus',
        'lo','como','ya','mas','m√°s','sin','tras','mientras','entre','sobre','contra','este','esta','estos','estas',
        'hoy','ayer','ma√±ana','nuevo','nueva','ultimas','√∫ltimas','ultima','√∫ltima','ultimo','√∫ltimo','video','vivo',
        'anos','a√±os','ano','mes','dia','d√≠a','ahora','otros','otra','serie','blue','bbva'
      ]);
      const sanitize = t => (t||'').toLowerCase().normalize('NFD').replace(/\p{Diacritic}/gu,'').replace(/[^\p{L}\p{N}._-]+/gu,'');
      const filterKeywords = (list=[]) =>
        list.map(w => (typeof w === 'string' ? {text:w, count:1} : w))
            .map(d => ({ text: sanitize(d.text), count: d.count || 1 }))
            .filter(d => d.text && d.text.length>=3 && !/^\d+$/.test(d.text) && !STOP.has(d.text));

      /* ===== Ticker ===== */
      function setupMarquee(headlines, weatherText=''){
        const el = document.getElementById('headlineMarquee');
        const wrap = el?.parentElement;
        if (!el || !wrap) return;
        const sep = '  ‚Ä¢  ';
        const base = (headlines?.length ? headlines.join(sep) : 'Sin titulares disponibles');
        const full = (weatherText ? weatherText + sep : '') + base;

        el.textContent = full;
        while (el.scrollWidth < wrap.clientWidth * 2) el.textContent += sep + base;

        const pxPerSec = 80;
        const dur = Math.max(20, Math.min(180, el.scrollWidth / pxPerSec));
        el.style.setProperty('--marquee-duration', dur + 's');
      }

      /* ===== Nube ===== */
      function drawWordCloud(wordsIn){
        const svg = d3.select('#cloud');
        const svgEl = svg.node();
        if (!svgEl) return;

        const r = svgEl.parentElement.getBoundingClientRect();
        const width  = Math.max(100, Math.floor(r.width));
        const height = Math.max(100, Math.floor(r.height));
        svg.attr('viewBox', `0 0 ${width} ${height}`).attr('preserveAspectRatio','xMidYMid meet');

        const raw = (typeof wordsIn[0] === 'object')
          ? wordsIn.map(d => ({ text: d.text, count: d.count || 1 }))
          : wordsIn.map((t,i,a) => ({ text: t, count: a.length - i }));

        const data = filterKeywords(raw);
        if (!data.length) {
          svg.selectAll('*').remove();
          svg.append('text').attr('x',width/2).attr('y',height/2).attr('text-anchor','middle')
             .attr('dominant-baseline','middle').attr('fill','#fff').style('opacity',.9).style('font-size','22px')
             .text('Sin datos por ahora');
          return;
        }

        const counts = data.map(d=>d.count);
        const scale = d3.scaleLinear()
          .domain([d3.min(counts) ?? 1, d3.max(counts) ?? 1])
          .range([14, Math.max(28, Math.min(72, Math.round(width/14)))]);

        const layout = cloud().size([width,height]).padding(3).rotate(()=>0)
          .font('system-ui').fontSize(d=>scale(d.count)).words(data);

        layout.on('end', placed => {
          svg.selectAll('*').remove();
          const g = svg.append('g').attr('transform', `translate(${width/2},${height/2})`);
          g.selectAll('text').data(placed.sort((a,b)=>b.size-a.size)).enter()
            .append('text').attr('class','word')
            .style('font-size', d=>d.size+'px').style('font-family','system-ui,sans-serif')
            .attr('text-anchor','middle')
            .attr('transform', d=>`translate(${d.x},${d.y})rotate(${d.rotate})`)
            .text(d=>d.text);
        });
        layout.start();
      }

      /* ===== Datos + render ===== */
      async function loadDataAndRender(){
        let headlines = [], keywords = [], detailed = [];

        try{
          const res = await fetch('/api/trending');
          if (res.ok){ const d = await res.json(); headlines = d.headlines||[]; keywords = d.keywords||[]; detailed = d.keywordsDetailed||[]; }
        }catch{}

        let weatherPrefix = '';
        try{
          //const wres = await fetch('/api/weather');
          if (wres.ok){ const w = await wres.json(); weatherPrefix = `Clima Buenos Aires: ${Math.round(w.temp)}¬∞C, ${w.desc}`; }
        }catch{}

        setupMarquee(headlines, weatherPrefix);

        const base = detailed.length ? detailed : keywords.map((t,i,a)=>({text:t,count:a.length-i}));
        const words = filterKeywords(base).slice(0,80);
        drawWordCloud(words);

        const center = document.querySelector('.tile.center');
        if (center && !center._ro){ center._ro = new ResizeObserver(()=>drawWordCloud(words)); center._ro.observe(center); }
      }

      /* ===== Canales / layout / men√∫ ===== */
      const CHANNELS = [
        { id:'tn',       name:'TN',       src:'https://www.youtube.com/embed/cb12KmMMDJA?rel=0&modestbranding=1' },
        { id:'canal26',  name:'Canal 26', src:'https://www.youtube.com/embed/BTaSHvWJW5A?rel=0&modestbranding=1' },
        { id:'ln+',      name:'LN+',      src:'https://www.youtube.com/embed/5f__Ls4_VYQ?rel=0&modestbranding=1' },
        { id:'c5n',      name:'C5N',      src:'https://www.youtube.com/embed/jTDk5CswBVk?rel=0&modestbranding=1' },
        { id:'cronica',  name:'Cr√≥nica',  src:'https://www.youtube.com/embed/avly0uwZzOE?rel=0&modestbranding=1' },
        { id:'america',  name:'Am√©rica',  src:'https://www.youtube.com/embed/ArKbAx1K-2U?rel=0&modestbranding=1' },
        { id:'infobae',  name:'Infobae',  src:'https://www.youtube.com/embed/j-em8Y9hfoE?rel=0&modestbranding=1' },
        { id:'nettv',    name:'Net TV (HLS)', src:'https://rudo.video/live/nettv' },
      ];
      const VISIBLE_IDX = { '9':[0,1,2,3,5,6,7,8], '6':[0,1,2,3,5,6], '4':[0,1,2,3], '1':[0] };
      const DEFAULTS = { '9':['tn','canal26','ln+','c5n','cronica','america','infobae','nettv'], '6':['tn','canal26','ln+','c5n','cronica','america'], '4':['tn','canal26','ln+','c5n'], '1':['tn'] };
      const mapKey = m => `channelMap-${m}`;
      const loadMap = m => JSON.parse(localStorage.getItem(mapKey(m))||'null')||DEFAULTS[m].slice();
      const saveMap = (m,map) => localStorage.setItem(mapKey(m), JSON.stringify(map));

      function applyChannelMap(mode){
        const map = loadMap(mode);
        VISIBLE_IDX[mode].forEach((tileIndex, pos) => {
          const ch = CHANNELS.find(c => c.id === map[pos]);
          const iframe = document.querySelector(`.tile[data-idx="${tileIndex}"] iframe`);
          if (!iframe || !ch) return;
          const src = ch.src.includes('?') ? `${ch.src}&autoplay=1&mute=1&playsinline=1` : `${ch.src}?autoplay=1&mute=1&playsinline=1`;
          if (iframe.src !== src) iframe.src = src;
        });
      }
      function renderSelectorsFor(mode){
        const wrap = document.getElementById('slotSelectors'); if (!wrap) return;
        wrap.innerHTML = '';
        const map = loadMap(mode);
        VISIBLE_IDX[mode].forEach((tileIndex, pos) => {
          const row = document.createElement('div'); row.className='slot-row';
          const lab = document.createElement('label'); lab.textContent=`Pos ${pos+1}`; lab.htmlFor=`slot-${pos}`;
          const sel = document.createElement('select'); sel.id=`slot-${pos}`;
          CHANNELS.forEach(ch => { const opt=document.createElement('option'); opt.value=ch.id; opt.textContent=ch.name; sel.appendChild(opt); });
          sel.value = map[pos] || DEFAULTS[mode][pos];
          sel.addEventListener('change', ()=>{ map[pos]=sel.value; saveMap(mode,map); applyChannelMap(mode); });
          row.append(lab, sel); wrap.appendChild(row);
        });
        const resetBtn = document.getElementById('resetMap');
        if (resetBtn) resetBtn.onclick = ()=>{ saveMap(mode, DEFAULTS[mode].slice()); renderSelectorsFor(mode); applyChannelMap(mode); };
      }

      const grid = document.querySelector('.grid');
      const btn  = document.getElementById('menuBtn');
      const panel= document.getElementById('menuPanel');
      const KEY_L = 'layoutMode';
      const ALL   = ['mode-9','mode-6','mode-4','mode-1'];

      function setMode(mode){
        ALL.forEach(c=>grid.classList.remove(c));
        grid.classList.add(`mode-${mode}`);
        localStorage.setItem(KEY_L, mode);
        const r = panel.querySelector(`input[name="layout"][value="${mode}"]`); if (r) r.checked = true;
        renderSelectorsFor(mode); applyChannelMap(mode);
      }
      setMode(localStorage.getItem(KEY_L) || '9');

      const close=()=>{ panel.hidden=true; btn.setAttribute('aria-expanded','false'); window.removeEventListener('click', outside); };
      const outside=e=>{ if (!panel.contains(e.target) && e.target!==btn) close(); };
      btn.addEventListener('click', e=>{ e.stopPropagation(); const open=panel.hidden; panel.hidden=!open; btn.setAttribute('aria-expanded', String(open)); if (open) window.addEventListener('click', outside); });
      panel.querySelectorAll('input[name="layout"]').forEach(el => el.addEventListener('change', e=>{ setMode(e.target.value); close(); }));

      /* Drag vertical del ticker */
      (function(){
        const KEY='tickerTopPx', GAP=10, ticker=document.getElementById('ticker');
        if(!ticker) return;
        const clamp=y=>{ const h=ticker.getBoundingClientRect().height; return Math.max(GAP, Math.min(y, window.innerHeight-h-GAP)); };
        const getTop=()=>{ const t=parseFloat(getComputedStyle(ticker).top); return Number.isFinite(t)?t:GAP; };
        const setTop=y=>{ ticker.style.top = `${clamp(y)}px`; };
        const saved=Number(localStorage.getItem(KEY)); if(!Number.isNaN(saved)) setTop(saved); else setTop(getTop());
        let drag=false, startY=0, startTop=0;
        const down=e=>{ if(e.button!==undefined && e.button!==0) return; drag=true; ticker.dataset.dragging='true'; startY=(e.touches?e.touches[0].clientY:e.clientY); startTop=getTop();
          document.addEventListener('mousemove', move); document.addEventListener('mouseup', up);
          document.addEventListener('touchmove', move, {passive:false}); document.addEventListener('touchend', up);
          e.cancelable && e.preventDefault();
        };
        const move=e=>{ if(!drag) return; const y=e.touches?e.touches[0].clientY:e.clientY; setTop(startTop+(y-startY)); e.cancelable && e.preventDefault(); };
        const up=()=>{ if(!drag) return; drag=false; delete ticker.dataset.dragging; localStorage.setItem(KEY, String(clamp(getTop())));
          document.removeEventListener('mousemove', move); document.removeEventListener('mouseup', up);
          document.removeEventListener('touchmove', move); document.removeEventListener('touchend', up);
        };
        ticker.addEventListener('mousedown', down); ticker.addEventListener('touchstart', down, {passive:false});
        window.addEventListener('resize', ()=> setTop(getTop()));
      })();

      /* Render inicial + refresh cada 5 min */
      loadDataAndRender();
      setInterval(loadDataAndRender, 5*60*1000);
    </script>
  </body>
</html>
